{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "project-group-8-backend",
    "description": "API documentation for project-group-8-backend",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumers": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],

  "servers": [
    {
      "url": "https://project-group-8-backend.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints related to user management"
    },
    {
      "name": "Water",
      "description": "Endpoints related to water consumption"
    }
  ],
  "paths": {
    "api/users/signUp": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/signIn": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign in with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully signed in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/signOut": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign out the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully signed out"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user's information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/updateAvatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatarURL": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Users"],
        "summary": "Verify user's email",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid or expired verification token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/resendVerifyEmail": {
      "post": {
        "tags": ["Users"],
        "summary": "Resend verification email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerifyEmailRequest"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Verification email resent successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/refresh": {
      "post": {
        "tags": ["Users"],
        "summary": "Refresh access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/google": {
      "get": {
        "tags": ["Users"],
        "summary": "Authenticate via Google",
        "responses": {
          "302": {
            "description": "Redirect to Google authentication page"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/users/google/callback": {
      "get": {
        "tags": ["Users"],
        "summary": "Google authentication callback",
        "responses": {
          "302": {
            "description": "Redirect back to the application"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "api/waters/add": {
      "post": {
        "tags": ["Water"],
        "summary": "Add water intake",
        "description": "Adds a new water intake record for the authenticated user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWaterRequest"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Water intake added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "api/waters/{id}": {
      "patch": {
        "tags": ["Water"],
        "summary": "Update water intake",
        "description": "Updates an existing water intake record for the authenticated user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the water intake record to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water intake updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "tags": ["Water"],
        "summary": "Delete water intake",
        "description": "Deletes an existing water intake record for the authenticated user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the water intake record to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water intake deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "api/waters/day": {
      "get": {
        "tags": ["Water"],
        "summary": "Get water intake for a day",
        "description": "Gets the water intake records for the authenticated user for a specific day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water intake retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWaterDayResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "api/waters/month": {
      "get": {
        "tags": ["Water"],
        "summary": "Get water intake for a month",
        "description": "Gets the aggregated water intake records for the authenticated user for a specific month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water intake retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWaterMonthResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "Qwerty123456"
          }
        },
        "required": ["email", "password"]
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "water": {
            "type": "number"
          },
          "avatarURL": {
            "type": "string",
            "format": "uri"
          },
          "accessToken": {
            "type": "string",
            "example": "sonvoiwh22489u24hkhnivu4889..."
          },
          "refreshToken": {
            "type": "string",
            "example": "sonvoiwh22489u24hkhnivu4889..."
          }
        },
        "required": ["email", "water", "avatarURL"]
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "water": {
            "type": "number"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "avatar",
          "water",
          "accessToken",
          "refreshToken"
        ]
      },
      "ResendVerifyEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["email"]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": ["refreshToken"]
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": ["accessToken", "refreshToken"]
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"]
          },
          "weight": {
            "type": "number"
          },
          "activeSportTime": {
            "type": "number"
          },
          "dailyWaterNorma": {
            "type": "number"
          },
          "avatarURL": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's authentication token"
          }
        },
        "required": ["token"]
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dailyWaterNorma": {
            "type": "number"
          },
          "avatarURL": {
            "type": "string",
            "format": "uri"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"]
          },
          "weight": {
            "type": "number"
          },
          "activeSportTime": {
            "type": "number"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "CreateWaterRequest": {
        "type": "object",
        "properties": {
          "amountDose": {
            "type": "number"
          },
          "timeDose": {
            "type": "string",
            "format": "time"
          },
          "dateDose": {
            "type": "string",
            "format": "date"
          }
        },
        "required": ["amountDose", "timeDose"]
      },
      "UpdateWaterRequest": {
        "type": "object",
        "properties": {
          "amountDose": {
            "type": "number"
          },
          "timeDose": {
            "type": "string",
            "format": "time"
          },
          "dateDose": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "WaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "amountDose": {
            "type": "number"
          },
          "timeDose": {
            "type": "string",
            "format": "time"
          },
          "dateDose": {
            "type": "string",
            "format": "date"
          },
          "owner": {
            "type": "string"
          }
        }
      },
      "GetWaterDayResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaterResponse"
            }
          },
          "percent": {
            "type": "number"
          }
        }
      },
      "GetWaterMonthResponse": {
        "type": "object",
        "properties": {
          "dailyList": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "totalAmount": {
                  "type": "number"
                },
                "percentage": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
