{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger TaskPro",
    "description": "Showing off swagger-ui-express.[Backend github repository](https://github.com/VolodymyrKucheruk/project-team-12-TaskPro-backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "https://project-team-12-taskpro-backend.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User-related endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards-related endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns-related endpoints"
    },
    {
      "name": "Todos",
      "description": "Todos-related endpoints"
    },
    {
      "name": "Email",
      "description": "Email-related endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email in use"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["User"],
        "summary": "Login - sign in existing user",
        "requestBody": {
          "description": "Sign in object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/signout": {
      "post": {
        "tags": ["User"],
        "summary": "Logout current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID",
                          "example": "6670bb38014fc2739c81ec8"
                        },
                        "name": {
                          "type": "string",
                          "description": "User's name",
                          "example": "Alex"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email",
                          "format": "email",
                          "example": "alex@example.com"
                        },
                        "avatarURL": {
                          "type": "string",
                          "description": "URL to user's avatar",
                          "example": "https://res.cloudinary.com/dtgxgkg61/image/upload/v1718663990/hmo4jaowcebmdz430cwk.jpg"
                        },
                        "theme": {
                          "type": "string",
                          "description": "User's preferred theme",
                          "enum": ["violet", "light", "dark"],
                          "example": "dark"
                        }
                      }
                    },
                    "boards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Board ID",
                            "example": "60c72b2f9b1e8a6d4c7a9a1d"
                          },
                          "icon": {
                            "type": "string",
                            "description": "Board's icon",
                            "example": "icon-puzzle-piece-02"
                          },
                          "title": {
                            "type": "string",
                            "description": "Board's title",
                            "example": "My Board"
                          },
                          "background": {
                            "type": "string",
                            "description": "Board's background",
                            "example": "#ffffff"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }, 
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }, 
    "/api/users/update": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": { 
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID",
                          "example": "60c72b2f9b1e8a6d4c7a9a1d"
                        },
                        "name": {
                          "type": "string",
                          "description": "User's name",
                          "example": "Alex"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email",
                          "format": "email",
                          "example": "alex@example.com"
                        },
                        "avatarURL": {
                          "type": "string",
                          "description": "URL to user's avatar",
                          "example": "https://res.cloudinary.com/dtgxgkg61/image/upload/v1718663990/hmo4jaowcebmdz430cwk.jpg"
                        },
                        "theme": {
                          "type": "string",
                          "description": "User's preferred theme",
                          "enum": ["violet", "light", "dark"],
                          "example": "dark"
                        }
                      }
                    }                   
                  }
                }
              }
            }
          }, 
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/boards/create": {
      "post": {
        "tags": ["Boards"],
        "summary": "Create a new board",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/boards": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get all boards",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/boards/{boardId}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get one board",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardWithColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Board not found"
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete one board",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Board not found"
          }
        }
      }       
    },
    "/api/boards/update/{boardId}": {
      "patch": {
        "tags": ["Boards"],
        "summary": "Update one board",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Board not found"
          }
        }
      }
    }, 
    "/api/columns/create/{boardId}": {
      "post": {
        "tags": ["Columns"],
        "summary": "Create a new column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Column created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/columns/{columnId}": {
      "get": {
        "tags": ["Columns"],
        "summary": "Get one column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Column ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Column not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete one column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Column ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Column and related todos deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Column and related todos deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Column not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "patch": {
        "tags": ["Columns"],
        "summary": "Update one column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Column ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Column updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Column not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/todos/create/{columnId}": {
      "post": {
        "tags": ["Todos"],
        "summary": "Create a new todo",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Column ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/todos/{todoId}": {
      "get": {
        "tags": ["Todos"],
        "summary": "Get one todo",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Todo ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Todo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Todos"],
        "summary": "Delete one todo",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Todo ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Todo deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Todo deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Todo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "patch": {
        "tags": ["Todos"],
        "summary": "Update one todo",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Todo ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Todo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/todos/{todoId}/{columnId}/update": {
      "patch": {
        "tags": ["Todos"],
        "summary": "Change todo owner",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Todo ID"
          },
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Column ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Todo owner changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Todo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/help": {
      "post": {
        "tags": ["Email"],
        "summary": "Send an email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
        "name": {
            "type": "string",
            "description": "User's name",
            "example": "Updated Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "updated.email@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "newpassword123"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "https://res.cloudinary.com/dtgxgkg61/image/upload/v1718663990/hmo4jaowcebmdz430cwk.jpg"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["violet", "light", "dark"]
          } 
        }
      },
      "CreateBoardRequest": {
        "type": "object",
        "required": ["title", "icon", "background"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "My Board"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-puzzle-piece-02"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "14"
          }
        }
      },
      "UpdateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Updated Board"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-puzzle-piece-02"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "14"
          }
        }
      },
      "CreateColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "To Do"
          }
        }
      },
      "UpdateColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "In Progress"
          }
        }
      },
      "CreateTodoRequest": {
        "type": "object",
        "required": ["title", "priority", "deadline"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Todo's title",
            "example": "Finish the project"
          },
          "description": {
            "type": "string",
            "description": "Todo's description",
            "example": "Complete all the pending tasks for the project."
          },
          "priority": {
            "type": "string",
            "description": "Todo's priority",
            "enum": ["Without priority", "Low", "Medium", "High"],
            "example": "High"
          },
          "deadline": {
            "type": "string",
            "description": "Todo's deadline",
            "example": "2023-12-31"
          }
        }
      },
      "UpdateTodoRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Todo's title",
            "example": "Review the code"
          },
          "description": {
            "type": "string",
            "description": "Todo's description",
            "example": "Review the code and ensure it meets the standards."
          },
          "priority": {
            "type": "string",
            "description": "Todo's priority",
            "example": "Medium"
          },
          "deadline": {
            "type": "string",
            "description": "Todo's deadline",
            "example": "2023-11-30"
          }
        }
      },
      "SendEmailRequest": {
        "type": "object",
        "required": ["to", "subject", "body"],
        "properties": {
          "email": {          
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "recipient@example.com"
          },
          "comment": {
            "type": "string",
            "description": "Email subject",
            "example": "Hello my litlle darling!"
          }     
        }
      },      
      "BoardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "My Board"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-puzzle-piece-02"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "14"
          },
          "ownerUser": {
            "type": "string",
            "description": "User ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },
      "BoardWithColumnsResponse": {
        "type": "object",
        "properties": {
          "board": {
            "$ref": "#/components/schemas/BoardResponse"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Column ID",
                  "example": "60c72b2f9b1e8a6d4c7a9a1d"
                },
                "title": {
                  "type": "string",
                  "description": "Column's title",
                  "example": "To Do"
                },
                "ownerBoard": {
                  "type": "string",
                  "description": "Board ID",
                  "example": "60c72b2f9b1e8a6d4c7a9a1d"
                },
                "todos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoResponse"
                  }
                }
              }
            }
          }
        }
      },
      "TodoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Todo ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "description": "Todo's title",
            "example": "Finish the project"
          },
          "description": {
            "type": "string",
            "description": "Todo's description",
            "example": "Complete all the pending tasks for the project."
          },
          "priority": {
            "type": "string",
            "description": "Todo's priority",
            "example": "High"
          },
          "deadline": {
            "type": "string",
            "description": "Todo's deadline",
            "example": "2023-12-31"
          },
          "ownerColumn": {
            "type": "string",
            "description": "Column ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },

      "ColumnResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Column ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          },
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "To Do"
          },
          "ownerBoard": {
            "type": "string",
            "description": "Board ID",
            "example": "60c72b2f9b1e8a6d4c7a9a1d"
          }
        }
      },
      "EmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Email sent successfully"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
